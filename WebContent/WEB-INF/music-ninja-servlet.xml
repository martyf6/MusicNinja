<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans     
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
        
    <import resource="datasource-config.xml"/>
        
	<context:component-scan base-package="com.musicninja" />
	
	<mvc:annotation-driven />
	
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	<bean id="registrationValidator" class="com.musicninja.form.RegistrationValidator" />
	
	<mvc:resources mapping="/resources/**" location="/resources/" />
	
	<bean id="messageSource"
        class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basename" value="/WEB-INF/messages" />
        <property name="defaultEncoding" value="UTF-8" />
    </bean>	
    
    <!-- 
    Read service Api keys from 'profile.properties' file 
    and call setter functions for service classes.
     -->
    <context:property-placeholder location="classpath:profile.properties" 
    	system-properties-mode="OVERRIDE"
    	ignore-unresolvable="true" />
    
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
	    <property name="staticMethod" value="com.musicninja.spotify.SpotifyRequests.setApi"/>
	    <property name="arguments">
	        <list>
	            <value>${spotify.clientId}</value>
	            <value>${spotify.clientSecretId}</value>
	        </list>
	   </property>
	</bean>
	
	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
	    <property name="staticMethod" value="com.musicninja.echonest.EchonestRequests.setApi"/>
	    <property name="arguments">
	        <list>
	            <value>${echonest.apiKey}</value>
	        </list>
	   </property>
	</bean>
</beans>